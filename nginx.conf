server {
    listen 80;
    server_name localhost;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Configuración para archivos estáticos
    location / {
      try_files $uri $uri/ /index.html;
      
        # Headers para SPA
      add_header Cache-Control "no-store, no-cache, must-revalidate";
      add_header Pragma "no-cache";
      expires 0;
    }

    # Configuración para assets
    location /assets/ {
      expires 1y;
      add_header Cache-Control "public, immutable";
    }

     # Configuración mejorada para API
    location ~ ^/api(/|$) {
        proxy_pass http://34.71.107.222:3000;
        proxy_http_version 1.1;
        
        # Headers esenciales
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuración específica para respuestas JSON
        proxy_set_header Accept "application/json";
        proxy_set_header Content-Type "application/json";
        
        # Manejo de CORS
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        
        # Manejo de OPTIONS para CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Manejo de errores - solo para rutas no API
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
      internal;
    }
}